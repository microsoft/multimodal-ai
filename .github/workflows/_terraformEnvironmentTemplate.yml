name: Terraform Template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Specifies the environment of the deployment."
      terraform_version:
        required: true
        type: string
        description: "Specifies the terraform version."
      prereqs_working_directory:
        required: true
        type: string
        description: "Specifies the working directory for prereqs."
      runner_working_directory:
        required: true
        type: string
        description: "Specifies the working directory for the runner."
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true
        description: "Specifies a GitHub PAT."
      AZURE_TENANT_ID:
        required: true
        description: "Specifies the Azure Tenant ID."
      AZURE_SUBSCRIPTION_ID:
        required: true
        description: "Specifies the Azure Subscription ID."
      AZURE_CLIENT_ID:
        required: true
        description: "Specifies the Azure App Client ID."
      AZURE_CLIENT_SECRET:
        required: true
        description: "Specifies the client secret."
      AZURE_TF_STATE_RESOURCE_GROUP_NAME:
        required: true
        description: "Specifies the Azure Resource Group Name for TF state."
      AZURE_TF_STATE_STORAGE_ACCOUNT_NAME:
        required: true
        description: "Specifies the Azure Storage Account Name for TF state."
      AZURE_TF_STATE_CONTAINER_NAME:
        required: true
        description: "Specifies the Azure Storage Container Name Prefix for TF state."

permissions:
  id-token: write
  contents: read

jobs:
    deploy-prereqs:
        name: Terraform Deploy Prereqs
        runs-on: [ubuntu-latest]
        continue-on-error: false
        #environment: ${{ inputs.environment }}
        concurrency:
            group: terraform-${{ inputs.environment }}
            cancel-in-progress: false

        env:
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_USE_AZUREAD: true
          ARM_USE_OIDC: false

        steps:
            # Setup Terraform
            - name: Setup Terraform
              id: terraform_setup
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: ${{ inputs.terraform_version }}
                terraform_wrapper: true

            # Check Out Repository
            - name: Check Out Repository
              id: checkout_repository
              uses: actions/checkout@v4

            # Terraform Init
            - name: Terraform Init Prereqs
              working-directory: ${{ inputs.prereqs_working_directory }}
              run: |
                terraform init \
                    -backend-config="environment=public" \
                    -backend-config="resource_group_name=${{ secrets.AZURE_TF_STATE_RESOURCE_GROUP_NAME }}" \
                    -backend-config="storage_account_name=${{ secrets.AZURE_TF_STATE_STORAGE_ACCOUNT_NAME }}" \
                    -backend-config="container_name=${{ secrets.AZURE_TF_STATE_CONTAINER_NAME}}" \
                    -backend-config="key=prereqs.tfstate"

            # Terraform Apply
            - name: Terraform Apply Prereqs
              working-directory: ${{ inputs.prereqs_working_directory }}
              run: |
                terraform apply -var-file=vars.tfvars -auto-approve -input=false

            - name: Upload prereqs tfvars
              id: upload_prereqs_tfvars
              uses: actions/upload-artifact@v4
              with:
                name: prereqs-tfvars
                path: ./deployment/terraform/infra/prereqs.tfvars

    deploy-runner:
        name: Terraform Deploy Runner
        runs-on: [ubuntu-latest]
        continue-on-error: false
        needs: [deploy-prereqs]
        #environment: ${{ inputs.environment }}
        concurrency:
            group: terraform-${{ inputs.environment }}
            cancel-in-progress: false

        env:
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_USE_AZUREAD: true
          ARM_USE_OIDC: false

        steps:
            # Setup Terraform
            - name: Setup Terraform
              id: terraform_setup
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: ${{ inputs.terraform_version }}
                terraform_wrapper: true

            # Check Out Repository
            - name: Check Out Repository
              id: checkout_repository
              uses: actions/checkout@v4

            - name: Download prereqs tfvars
              id: upload_prereqs_tfvars
              uses: actions/download-artifact@v4
              with:
                name: prereqs-tfvars
                path: ./deployment/terraform/runner

            # Terraform Init
            - name: Terraform Init Runner
              working-directory: ${{ inputs.runner_working_directory }}
              run: |
                terraform init \
                    -backend-config="environment=public" \
                    -backend-config="resource_group_name=${{ secrets.AZURE_TF_STATE_RESOURCE_GROUP_NAME }}" \
                    -backend-config="storage_account_name=${{ secrets.AZURE_TF_STATE_STORAGE_ACCOUNT_NAME }}" \
                    -backend-config="container_name=${{ secrets.AZURE_TF_STATE_CONTAINER_NAME}}" \
                    -backend-config="key=runner.tfstate"

            # Terraform Apply
            - name: Terraform Apply Runner
              working-directory: ${{ inputs.runner_working_directory }}
              run: |
                terraform apply -var-file=vars.tfvars -var-file=prereqs.tfvars -auto-approve -input=false
              env:
                TF_VAR_github_personal_access_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                TF_VAR_github_repo_owner: ${{ github.actor }}
                TF_VAR_github_repo_name:  ${{ github.event.repository.name }}
                TF_VAR_container_image_reference: ghcr.io/${{ github.repository }}/githubagentazure:latest
